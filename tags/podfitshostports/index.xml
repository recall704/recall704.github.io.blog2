<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Podfitshostports on Recall&#39;s blog</title>
    <link>http://www.recall704.com/tags/podfitshostports/</link>
    <description>Recent content in Podfitshostports on Recall&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 24 Sep 2018 18:46:09 +0800</lastBuildDate>
    
	<atom:link href="http://www.recall704.com/tags/podfitshostports/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8s 调度算法分析之 PodFitsHostPorts（三）</title>
      <link>http://www.recall704.com/cloud/k8s/scheduler/pod-fits-host-ports/</link>
      <pubDate>Mon, 24 Sep 2018 18:46:09 +0800</pubDate>
      
      <guid>http://www.recall704.com/cloud/k8s/scheduler/pod-fits-host-ports/</guid>
      <description>一、概述 之前的文章有简要分析 k8s 的调度过程，主要就是
1. 节点筛选（选取可用的节点）
2. 节点排序（选取最优节点）
今天我们来详细分析其中的一个筛选算法 PodFitsHostPorts
二、代码分析 // PodFitsHostPorts checks if a node has free ports for the requested pod ports. func PodFitsHostPorts(pod *v1.Pod, meta algorithm.PredicateMetadata, nodeInfo *schedulercache.NodeInfo) (bool, []algorithm.PredicateFailureReason, error) { var wantPorts map[string]bool if predicateMeta, ok := meta.(*predicateMetadata); ok { wantPorts = predicateMeta.podPorts } else { // We couldn&amp;#39;t parse metadata - fallback to computing it. 	wantPorts = schedutil.GetUsedPorts(pod) } if len(wantPorts) == 0 { return true, nil, nil } existingPorts := nodeInfo.</description>
    </item>
    
  </channel>
</rss>