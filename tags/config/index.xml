<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Config on Recall&#39;s blog</title>
    <link>http://www.recall704.com/tags/config/</link>
    <description>Recent content in Config on Recall&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sun, 15 Apr 2018 22:12:03 +0800</lastBuildDate>
    
	<atom:link href="http://www.recall704.com/tags/config/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>创建 client （二）： 通过配置文件方式访问 k8s API</title>
      <link>http://www.recall704.com/cloud/k8s-authentication-with-ca/</link>
      <pubDate>Sun, 15 Apr 2018 22:12:03 +0800</pubDate>
      
      <guid>http://www.recall704.com/cloud/k8s-authentication-with-ca/</guid>
      <description>0x01 概述 前面我讲过集群内通过 ServiceAccount 生成 token 的方式访问 k8s API Server， 那么如果我们要访问 k8s api 的应用不是跑在 k8s 之内，而是在 k8s 集群之外运行呢？
这个时候，我们还有两种认证方式
 ca 证书认证
 basic 认证  0x02 kubectl 是如何访问 k8s 的？ k8s 部署的时候，我们会给 kubectl 配置证书，context 等信息，生成一个 $HOME/.kube/config 这样的文件，文件内容如下 apiVersion: v1 clusters: - cluster: certificate-authority-data: ... server: https://192.168.1.200:6443 name: kube_cluster contexts: - context: cluster: kube_cluster namespace: kube-system user: kubectl name: kubectl@kube_cluster current-context: kubectl@kube_cluster kind: Config preferences: {} users: - name: kubectl user: as-user-extra: {} client-certificate-data: .</description>
    </item>
    
  </channel>
</rss>